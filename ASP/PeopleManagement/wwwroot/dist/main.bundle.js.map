{"version":3,"sources":["C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/$_lazy_route_resource lazy","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/app-shared.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/app.component.html","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/app.component.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/app.module.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/app.routing.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/configuration.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/errors/pagenotfound.component.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/models/city.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/models/configuration-model.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/models/models-index.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/models/paging-metadata.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/models/result.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/models/paged-person.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/models/person-filters.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/models/person-index.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/models/person.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-create/person-create.component.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-details/person-details.component.html","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-details/person-details.component.scss","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-details/person-details.component.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-edit/person-edit.component.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-list/person-list.component.html","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-list/person-list.component.scss","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-list/person-list.component.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/shared/person-template.html","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/pipes/pipes-index.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/pipes/postal-code.pipe.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/services/configuration.service.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/services/filter.service.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/services/loading.service.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/services/person.service.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/services/resources.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/services/services-index.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/environments/environment.ts","C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","export * from './models/models-index';\r\nexport * from './person/models/person-index';\r\nexport * from './services/services-index';\r\nexport * from './configuration';\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/app-shared.ts","module.exports = \"<div style=\\\"margin-top:64px; margin-left:8px; margin-right: 8px; \\\">\\r\\n  <div class=\\\"tab-content\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"loading\\\" [hidden]=\\\"!LoadingService.loading\\\">Loading</div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { OnInit } from '@angular/core';\r\nimport { LoadingService } from './app-shared';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(\r\n    public LoadingService: LoadingService\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport * as S from './services/services-index';\r\nimport * as P from './pipes/pipes-index';\r\nimport { HttpModule } from '@angular/http';\r\nimport { Configuration } from './configuration';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FilterService } from './services/filter.service';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { PersonListComponent } from './person/person-list/person-list.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PageNotFoundComponent } from './errors/pagenotfound.component';\r\nimport { routing } from './app.routing';\r\nimport { PersonDetailsComponent } from './person/person-details/person-details.component';\r\nimport { PersonCreateComponent } from './person/person-create/person-create.component';\r\nimport { PersonEditComponent } from './person/person-edit/person-edit.component';\r\n\r\nconst SERVICES = [\r\n  S.Resources,\r\n  Configuration,\r\n  S.LoadingService,\r\n  S.PersonService,\r\n  S.FilterService,\r\n  S.ConfigurationService\r\n];\r\n\r\nconst PIPES = [\r\n  P.PostalCodePipe\r\n]\r\n\r\nconst COMPONENTS = [\r\n  AppComponent,\r\n  PersonListComponent,\r\n  PageNotFoundComponent,\r\n  PersonDetailsComponent,\r\n  PersonCreateComponent,\r\n  PersonEditComponent\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...COMPONENTS,\r\n    ...PIPES\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgxPaginationModule,\r\n    RouterModule,\r\n    routing,\r\n  ],\r\n  providers: [\r\n    ...SERVICES,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { PageNotFoundComponent } from './errors/pagenotfound.component';\r\nimport { PersonListComponent } from './person/person-list/person-list.component';\r\nimport { PersonDetailsComponent } from './person/person-details/person-details.component';\r\nimport { PersonCreateComponent } from './person/person-create/person-create.component';\r\nimport { PersonEditComponent } from './person/person-edit/person-edit.component';\r\n\r\n// import { HomeComponent } from './home.component';\r\n// Uwaga!!! Kolejność ścieżek ma znaczenie, jeśli umieścimy coś po '**' to nigdy tam nie dojdziemy\r\nexport const routes: Routes = [\r\n    { path: '', redirectTo: '/persons', pathMatch: 'full' },\r\n    { path: 'persons/create', component: PersonCreateComponent },\r\n    { path: 'persons/edit/:id', component: PersonEditComponent },\r\n    { path: 'persons/:id', component: PersonDetailsComponent },\r\n    { path: 'persons', component: PersonListComponent },\r\n    { path: '**', component: PageNotFoundComponent },\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/app.routing.ts","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class Configuration {\r\n\r\n  public ApiUri: string = document.baseURI + 'api/';\r\n  public Person: string = `${this.ApiUri}data`;\r\n  public Configuration: string = `${this.ApiUri}data/configuration`;\r\n  constructor() {\r\n    if (document.baseURI === 'http://localhost:4200/') {\r\n      this.ApiUri = 'http://localhost:50193/api/';\r\n    }\r\n    this.Person = `${this.ApiUri}data`;\r\n    this.Configuration = `${this.ApiUri}data/configuration`;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/configuration.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    template: `<div class=\"alert alert- danger\" role=\"alert\">Sorry, this page does not exist </div>`\r\n})\r\nexport class PageNotFoundComponent { }\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/errors/pagenotfound.component.ts","export class City {\r\n    public id: number;\r\n    public name: string\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/models/city.ts","import { City } from \"./city\";\r\n\r\nexport class ConfigurationModel {\r\n    public cities: City[] = [];\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/models/configuration-model.ts","export * from './result';\r\nexport * from './paging-metadata';\r\nexport * from './city';\r\nexport * from './configuration-model';\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/models/models-index.ts","export class PagingMetadata {\r\n    currentPage: number;\r\n    nextPageLink: string;\r\n    pageSize: number;\r\n    basePageLink: string;\r\n    previousPageLink: string;\r\n    totalCount: number;\r\n    totalPages: number;\r\n    orderBy?: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/models/paging-metadata.ts","export class Result<T>{\r\n   public infoMessages: string[];\r\n   public errors: any;\r\n   public value: T\r\n   public isValid: boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/models/result.ts","import { Person } from \"./person\";\r\nimport { PagingMetadata } from \"../../app-shared\";\r\n\r\nexport class PagedPerson {\r\n    results: Person[];\r\n    metadata: PagingMetadata;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/models/paged-person.ts","export class PersonFilters {\r\n    name: string;\r\n    showOnlyActive: boolean;\r\n    showOnlyWithMoney: boolean;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/models/person-filters.ts","export * from './person';\r\nexport * from './paged-person';\r\nexport * from './person-filters';\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/models/person-index.ts","export class Person {\r\n    id: number;\r\n    lastName: string;\r\n    firstName: string;\r\n    street: string;\r\n    homeNumber: string;\r\n    postalCode: string;\r\n    city: string;\r\n    mobilePhone: string;\r\n    mobilePhone2: string;\r\n    email: string;\r\n    carNumber: string;\r\n    nip: string;\r\n    companyName: string;\r\n    regon: number;\r\n    comments: string;\r\n    removed: boolean;\r\n    isVirtual: boolean;\r\n    invoicesWhenCashCollected: boolean;\r\n    invoiceByInternet: boolean;\r\n    receiptBySms: boolean;\r\n    prePaidAmount: number = 0;\r\n\r\n\r\n    public get fullName(): string {\r\n        return `${this.firstName} ${this.lastName}`;\r\n    }\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/models/person.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators, FormControlName, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport 'rxjs/add/operator/debounceTime';\r\n\r\nimport {\r\n  LoadingService, Person, PersonService,\r\n  ConfigurationService, City, ConfigurationModel\r\n} from '../../app-shared';\r\n\r\nfunction emailMatcher(c: AbstractControl): { [key: string]: boolean } | null {\r\n  let emailControl = c.get('email');\r\n  let confirmControl = c.get('confirmEmail');\r\n  if (emailControl.pristine || confirmControl.pristine) {\r\n    return null;\r\n  }\r\n  if (emailControl.value === confirmControl.value) {\r\n    return null;\r\n  }\r\n  return { 'match': true };\r\n}\r\n\r\n@Component({\r\n  selector: 'app-person-create',\r\n  templateUrl: '../shared/person-template.html',\r\n})\r\nexport class PersonCreateComponent implements OnInit {\r\n  public SelectedItem: Person;\r\n  public Config: ConfigurationModel;\r\n  private id: number;\r\n  public errors: string[];\r\n  public personForm: FormGroup;\r\n\r\n  public emailMessage: string;\r\n\r\n  private validationMessages = {\r\n    required: 'Please enter your email address.',\r\n    pattern: 'Please enter a valid email address.'\r\n  };\r\n\r\n  constructor(public router: Router,\r\n    private loadingService: LoadingService,\r\n    private personService: PersonService,\r\n    private configurationService: ConfigurationService,\r\n    private fb: FormBuilder\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n\r\n    this.personForm = this.fb.group({\r\n      firstName: ['', [Validators.required, Validators.minLength(3)]],\r\n      lastName: ['', [Validators.required, Validators.maxLength(50)]],\r\n      emailGroup: this.fb.group({\r\n        email: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+')]],\r\n        confirmEmail: ['', Validators.required],\r\n      }, { validator: emailMatcher }),\r\n      mobilePhone: '',\r\n      notification: 'email',\r\n      sendCatalog: true,\r\n      city: ['', [Validators.required]],\r\n      postalCode: ['', [Validators.required]],\r\n      street: ['', [Validators.required]],\r\n      homeNumber: ['', [Validators.required]]\r\n    });\r\n\r\n    this.personForm.get('notification').valueChanges\r\n      .subscribe(value => this.setNotification(value));\r\n\r\n    const emailControl = this.personForm.get('emailGroup.email');\r\n    emailControl.valueChanges.debounceTime(1000).subscribe(value =>\r\n      this.setMessage(emailControl));\r\n\r\n    this.SelectedItem = new Person();\r\n    this.Config = new ConfigurationModel();\r\n    this.getConfiguration();\r\n  }\r\n\r\n  public OnSubmit(): void {\r\n    this.loadingService.start();\r\n\r\n    // Copy the form values over the product object values\r\n    let p = Object.assign({}, this.SelectedItem, this.personForm.value);\r\n    p.email = this.personForm.value.emailGroup.email;\r\n\r\n    this.personService.AddPerson(p)\r\n      .subscribe(result => {\r\n        this.id = result.id;\r\n      },\r\n        errors => {\r\n          this.loadingService.stop();\r\n        },\r\n        () => {\r\n          this.loadingService.stop();\r\n          this.router.navigate(['persons/', this.id]);\r\n        });\r\n  }\r\n\r\n  private getConfiguration(): void {\r\n    this.loadingService.start();\r\n    this.configurationService.GetConfiguration()\r\n      .subscribe(result => {\r\n        this.Config = result;\r\n      },\r\n        errors => {\r\n          this.loadingService.stop();\r\n        },\r\n        () => {\r\n          this.loadingService.stop();\r\n        }\r\n      );\r\n  }\r\n\r\n  public GoBack(): void {\r\n    this.router.navigate(['persons']);\r\n  }\r\n\r\n  private setMessage(c: AbstractControl): void {\r\n    this.emailMessage = '';\r\n    if ((c.touched || c.dirty) && c.errors) {\r\n      this.emailMessage = Object.keys(c.errors).map(key =>\r\n        this.validationMessages[key]).join(' ');\r\n    }\r\n  }\r\n\r\n  private setNotification(notifyVia: string): void {\r\n    const phoneControl = this.personForm.get('mobilePhone');\r\n    if (notifyVia === 'text') {\r\n      phoneControl.setValidators(Validators.required);\r\n    } else {\r\n      phoneControl.clearValidators();\r\n    }\r\n    phoneControl.updateValueAndValidity();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-create/person-create.component.ts","module.exports = \"<div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                    <h2 class=\\\"panel-title\\\">\\r\\n                        <button (click)=\\\"GoBack()\\\" class=\\\"btn btn-default btn-xs\\\">\\r\\n                            <i class=\\\"fa fa-arrow-circle-left\\\"></i>Back</button> &nbsp; Person details\\r\\n                    </h2>\\r\\n                </div>\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-1 row-verticaly-centered\\\">\\r\\n                            <i class=\\\"fa fa-male fa-5x\\\"></i>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            {{SelectedItem?.firstName}} {{SelectedItem?.lastName}}\\r\\n                            <br *ngIf=\\\"SelectedItem?.firstName || SelectedItem?.lastName\\\"> {{SelectedItem?.street}}&nbsp;{{SelectedItem?.homeNumber}},&nbsp;{{SelectedItem?.postalCode\\r\\n                            | postalCode}}&nbsp;{{SelectedItem?.city}}\\r\\n                            <br> E-mail: {{SelectedItem?.email}}\\r\\n                            <br> Mobile phone: {{SelectedItem?.mobilePhone}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"pull-right\\\">\\r\\n                        <button (click)=\\\"OnEditPerson()\\\" class=\\\"btn btn-sm btn-primary\\\">\\r\\n                            <i class=\\\"fa fa-pencil fa-fw\\\"> </i>Edit</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-details/person-details.component.html\n// module id = ../../../../../src/app/person/person-details/person-details.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".center-fa {\\n  padding-top: 15px;\\n  padding-left: 25px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-details/person-details.component.scss\n// module id = ../../../../../src/app/person/person-details/person-details.component.scss\n// module chunks = main","import { Component, OnInit, ViewChildren, QueryList } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Person } from '../models/person';\r\nimport {\r\n    PersonService, LoadingService\r\n} from '../../app-shared';\r\n\r\n@Component({\r\n    selector: 'app-person-details',\r\n    templateUrl: './person-details.component.html',\r\n    styleUrls: ['./person-details.component.scss']\r\n})\r\nexport class PersonDetailsComponent implements OnInit {\r\n    public SelectedItem: Person;\r\n    private id: number;\r\n\r\n    constructor(\r\n        public route: ActivatedRoute,\r\n        public router: Router,\r\n        public personService: PersonService,\r\n        private loadingService: LoadingService,\r\n    ) { }\r\n\r\n    public ngOnInit(): void {\r\n        this.id = +this.route.snapshot.params['id'];\r\n        this.getPerson(this.id);\r\n    }\r\n\r\n    private getPerson(id: number): void {\r\n        this.loadingService.start();\r\n        this.personService.GetById(id)\r\n            .subscribe(result => {\r\n                this.SelectedItem = result;\r\n            },\r\n                error => {\r\n                    this.loadingService.stop();\r\n                },\r\n                () => {\r\n                    this.loadingService.stop();\r\n                });\r\n    }\r\n\r\n    public GoBack(): void {\r\n        this.router.navigate(['persons']);\r\n    }\r\n\r\n    public OnEditPerson(): void {\r\n        this.router.navigate(['/persons/edit', this.id]);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-details/person-details.component.ts","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators, FormControlName, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport 'rxjs/add/operator/debounceTime';\r\n\r\nimport { Person } from '../models/person';\r\nimport {\r\n    PersonService, ConfigurationService,\r\n    LoadingService,\r\n    ConfigurationModel\r\n} from '../../app-shared';\r\n\r\n\r\nfunction emailMatcher(c: AbstractControl): { [key: string]: boolean } | null {\r\n    let emailControl = c.get('email');\r\n    let confirmControl = c.get('confirmEmail');\r\n    if (emailControl.pristine || confirmControl.pristine) {\r\n        return null;\r\n    }\r\n    if (emailControl.value === confirmControl.value) {\r\n        return null;\r\n    }\r\n    return { 'match': true };\r\n}\r\n\r\n@Component({\r\n    selector: 'app-person-edit',\r\n    templateUrl: '../shared/person-template.html',\r\n})\r\nexport class PersonEditComponent implements OnInit {\r\n    public SelectedItem: Person;\r\n    public Config: ConfigurationModel;\r\n    private id: number;\r\n    public errors: string[];\r\n    public personForm: FormGroup;\r\n\r\n    public emailMessage: string;\r\n\r\n    private validationMessages = {\r\n        required: 'Please enter your email address.',\r\n        pattern: 'Please enter a valid email address.'\r\n    };\r\n\r\n    constructor(\r\n        private personService: PersonService,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private loadingService: LoadingService,\r\n        private configurationService: ConfigurationService,\r\n        private fb: FormBuilder\r\n    ) { }\r\n\r\n    public ngOnInit(): void {\r\n        this.personForm = this.fb.group({\r\n            firstName: ['', [Validators.required, Validators.minLength(3)]],\r\n            lastName: ['', [Validators.required, Validators.maxLength(50)]],\r\n            emailGroup: this.fb.group({\r\n                email: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+')]],\r\n                confirmEmail: ['', Validators.required],\r\n            }, { validator: emailMatcher }),\r\n            mobilePhone: '',\r\n            notification: 'email',\r\n            sendCatalog: true,\r\n            city: ['', [Validators.required]],\r\n            postalCode: ['', [Validators.required]],\r\n            street: ['', [Validators.required]],\r\n            homeNumber: ['', [Validators.required]]\r\n        });\r\n\r\n        this.personForm.get('notification').valueChanges\r\n            .subscribe(value => this.setNotification(value));\r\n\r\n        const emailControl = this.personForm.get('emailGroup.email');\r\n        emailControl.valueChanges.debounceTime(1000).subscribe(value =>\r\n            this.setMessage(emailControl));\r\n\r\n        this.Config = new ConfigurationModel();\r\n        this.id = +this.route.snapshot.params['id'];\r\n        this.getPerson(this.id);\r\n        this.getConfiguration();\r\n    }\r\n\r\n    private getPerson(id: number): void {\r\n        this.loadingService.start();\r\n        this.personService.GetById(id)\r\n            .subscribe(result => {\r\n                    this.SelectedItem = result;\r\n\r\n                    // Update the data on the form\r\n                    this.personForm.patchValue({\r\n                        firstName: this.SelectedItem.firstName,\r\n                        lastName: this.SelectedItem.lastName,\r\n                        mobilePhone: this.SelectedItem.mobilePhone,\r\n                        emailGroup: {\r\n                            email: this.SelectedItem.email,\r\n                            confirmEmail: this.SelectedItem.email\r\n                        },\r\n                        city: this.SelectedItem.city,\r\n                        postalCode: this.SelectedItem.postalCode,\r\n                        street: this.SelectedItem.street,\r\n                        homeNumber: this.SelectedItem.homeNumber\r\n                    });\r\n                },\r\n                error => {\r\n                    this.loadingService.stop();\r\n                },\r\n                () => {\r\n                    this.loadingService.stop();\r\n                });\r\n    }\r\n\r\n    public OnSubmit(): void {\r\n        // Copy the form values over the product object values\r\n        let p = Object.assign({}, this.SelectedItem, this.personForm.value);\r\n        p.email = this.personForm.value.emailGroup.email;\r\n\r\n        this.loadingService.start();\r\n        this.personService.UpdatePerson(p, this.SelectedItem.id)\r\n            .subscribe(result => {\r\n            },\r\n                errors => {\r\n                    this.loadingService.stop();\r\n                    if (errors.errors) {\r\n                        if (errors.errors.length > 0) {                            \r\n                          for (let item in errors.errors) {\r\n                            this.errors.push(item);\r\n                          }\r\n                        }\r\n                      }\r\n                },\r\n                () => {\r\n                    this.loadingService.stop();\r\n                    this.router.navigate(['persons/', this.id]);\r\n                });\r\n    }\r\n\r\n    private getConfiguration(): void {\r\n        this.loadingService.start();\r\n        this.configurationService.GetConfiguration()\r\n            .subscribe(result => {\r\n                this.Config = result;\r\n            },\r\n                errors => {\r\n                    this.loadingService.stop();\r\n                },\r\n                () => {\r\n                    this.loadingService.stop();\r\n                }\r\n            );\r\n    }\r\n\r\n    public GoBack(): void {\r\n        this.router.navigate(['persons']);\r\n    }\r\n\r\n    private setMessage(c: AbstractControl): void {\r\n        this.emailMessage = '';\r\n        if ((c.touched || c.dirty) && c.errors) {\r\n            this.emailMessage = Object.keys(c.errors).map(key =>\r\n                this.validationMessages[key]).join(' ');\r\n        }\r\n    }\r\n\r\n    private setNotification(notifyVia: string): void {\r\n        const phoneControl = this.personForm.get('mobilePhone');\r\n        if (notifyVia === 'text') {\r\n            phoneControl.setValidators(Validators.required);\r\n        } else {\r\n            phoneControl.clearValidators();\r\n        }\r\n        phoneControl.updateValueAndValidity();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-edit/person-edit.component.ts","module.exports = \"<div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3 col-lg-3\\\">\\r\\n      <div class=\\\"bottom-buffer\\\">\\r\\n        <!--<div class =\\\"panel-body\\\">-->\\r\\n\\r\\n        <!--</div>-->\\r\\n      </div>\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">\\r\\n            <i class=\\\"fa fa-filter\\\" aria-hidden=\\\"true\\\"></i>FILTERS</h3>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"panel-body filter-panel-body\\\">\\r\\n          <form (ngSubmit)=\\\"OnSubmitSearch()\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <label for=\\\"name\\\" class=\\\"filter-label\\\">Last name:</label>\\r\\n              <div>\\r\\n                <input id=\\\"searchInput\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"params.lastName\\\" name=\\\"lastName\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <label for=\\\"area\\\" class=\\\"filter-label\\\">City</label>\\r\\n              <div>\\r\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"params.city\\\" name=\\\"city\\\">\\r\\n                  <option [ngValue]=\\\"null\\\"></option>\\r\\n                  <option *ngFor=\\\"let city of Config.cities\\\" [value]=\\\"city.name\\\"> {{city.name}} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <div class=\\\"form-row\\\">\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right \\\">\\r\\n                <i class=\\\"fa fa-search fa-lg\\\"></i>Search</button>\\r\\n              <div (click)=\\\"OnCleanFilters()\\\" class=\\\"btn btn-default pull-right  btn-link\\\" title=\\\"Clear filters panel\\\">\\r\\n                <i class=\\\"fa fa-times fa-lg\\\"></i>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"btn btn-primary col-sm-12\\\" (click)=\\\"OnNewPerson()\\\">\\r\\n        <i class=\\\"fa fa-plus fa-lg\\\"></i> New person\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-9 col-lg-9\\\">\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-body gray-background\\\">\\r\\n          <div class=\\\"row top_bottom-buffer\\\" *ngIf=\\\"pagingInfo.pageSize\\\">\\r\\n            <div class=\\\"pull-left\\\">\\r\\n              <pagination-controls (pageChange)=\\\"pageChanged($event)\\\" maxSize=\\\"9\\\" directionLinks=\\\"true\\\" autoHide=\\\"true\\\" previousLabel=\\\"Previous\\\"\\r\\n                nextLabel=\\\"Next\\\" screenReaderPaginationLabel=\\\"Pagination\\\" screenReaderPageLabel=\\\"page\\\" screenReaderCurrentLabel=\\\"You're on page\\\">\\r\\n              </pagination-controls>\\r\\n            </div>\\r\\n            <div class=\\\"pull-right top-right-buffer\\\">\\r\\n              <select placeholder=\\\"Page size\\\" [(ngModel)]=\\\"pagingInfo.pageSize\\\" name=\\\"pageSize\\\" (change)=\\\"pageSizeChanged($event.value)\\\">\\r\\n                <option [value]=\\\"20\\\">20</option>\\r\\n                <option [value]=\\\"50\\\">50</option>\\r\\n                <option [value]=\\\"100\\\">100</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered table-hover \\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Name</th>\\r\\n                  <th>City</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let person of PersonsTab | paginate: { totalItems: pagingInfo.totalCount, itemsPerPage: pagingInfo.pageSize, currentPage: pagingInfo.currentPage }; let i = index\\\"\\r\\n                  (click)=\\\"OnSelect(person)\\\">\\r\\n                  <td>{{person.firstName}} {{person.lastName}}</td>\\r\\n                  <td>{{person.city}} </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-list/person-list.component.html\n// module id = ../../../../../src/app/person/person-list/person-list.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-list/person-list.component.scss\n// module id = ../../../../../src/app/person/person-list/person-list.component.scss\n// module chunks = main","import {\r\n  Component, OnInit, Input, Output, EventEmitter\r\n} from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Person } from '../models/person';\r\nimport {\r\n  PagingMetadata,\r\n  PersonService,\r\n  LoadingService,\r\n  Configuration,\r\n  FilterService,\r\n  ConfigurationService,\r\n  ConfigurationModel\r\n} from '../../app-shared';\r\n\r\n@Component({\r\n  selector: 'app-persons-list',\r\n  templateUrl: './person-list.component.html',\r\n  styleUrls: ['./person-list.component.scss']\r\n})\r\nexport class PersonListComponent implements OnInit {\r\n  public Config: ConfigurationModel;\r\n  public PersonsTab: Person[];\r\n  public params: any;\r\n  public pagingInfo: PagingMetadata;\r\n\r\n  constructor(\r\n    public PersonService: PersonService,\r\n    private router: Router,\r\n    private loadingService: LoadingService,\r\n    private configuration: Configuration,\r\n    private filterService: FilterService,\r\n    private configurationService: ConfigurationService\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n\r\n    this.pagingInfo = new PagingMetadata();\r\n    this.Config = new ConfigurationModel();\r\n    this.OnCleanFilters();\r\n    let filters = this.filterService.GetFilters('personsFilter');\r\n    if (filters != null)\r\n      this.params = filters;\r\n    this.getConfiguration();\r\n    this.OnSubmitSearch();\r\n  }\r\n\r\n  public OnSubmitSearch(): void {\r\n    this.loadingService.start();\r\n    this.PersonService.GetWithParam(this.params)\r\n      .subscribe(persons => {\r\n\r\n        this.PersonsTab = persons.results;\r\n        this.pagingInfo = persons.metadata;\r\n        console.log(this.PersonsTab)\r\n      },\r\n        error => {\r\n          this.loadingService.stop();\r\n        },\r\n        () => this.loadingService.stop()\r\n      );\r\n  }\r\n\r\n  private getConfiguration(): void {\r\n    this.loadingService.start();\r\n    this.configurationService.GetConfiguration()\r\n      .subscribe(result => {\r\n        this.Config = result;\r\n      },\r\n        error => {\r\n          this.loadingService.stop();\r\n        },\r\n        () => this.loadingService.stop()\r\n      );\r\n  }\r\n\r\n  public OnCleanFilters(): void {\r\n    if (!this.params) {\r\n      this.params = {\r\n        lastName: '',\r\n        city: ''\r\n      };\r\n    }\r\n    this.params.lastName = '';\r\n    this.params.city = '';\r\n  }\r\n\r\n  public OnSelect(m: Person): void {\r\n    this.filterService.StoreFilters('personsFilters', this.params);\r\n    this.router.navigate(['/persons', m.id]);\r\n  }\r\n\r\n  public OnNewPerson(): void {\r\n    this.router.navigate(['persons/create']);\r\n  }\r\n\r\n  public updateQueryStringParameter(uri: string, key: string, value: number): string {\r\n    const re = new RegExp('([?&])' + key + '=.*?(&|$)', 'i');\r\n    const separator = uri.indexOf('?') !== -1 ? '&' : '?';\r\n    if (uri.match(re)) {\r\n      return uri.replace(re, '$1' + key + '=' + value + '$2');\r\n    } else {\r\n      return uri + separator + key + '=' + value;\r\n    }\r\n  }\r\n\r\n  public pageSizeChanged(ev: any): void {\r\n    if (!this.pagingInfo.nextPageLink) {\r\n      this.pagingInfo.nextPageLink = this.updateQueryStringParameter(this.pagingInfo.basePageLink, 'pageSize', this.pagingInfo.pageSize);\r\n    } else {\r\n      this.pagingInfo.nextPageLink = this.updateQueryStringParameter(this.pagingInfo.nextPageLink, 'pageSize', this.pagingInfo.pageSize);\r\n    }\r\n\r\n    // Po zmianie strony przejdz do pierwszej\r\n    this.pagingInfo.nextPageLink = this.updateQueryStringParameter(this.pagingInfo.nextPageLink, 'pageNumber', 1);\r\n    this.loadingService.start();\r\n    this.PersonService.GetPersons(this.pagingInfo.nextPageLink)\r\n      .subscribe(persons => {\r\n        this.PersonsTab = persons.results;\r\n        this.pagingInfo = persons.metadata;\r\n      },\r\n        error => {\r\n          this.loadingService.stop();\r\n        },\r\n        () => this.loadingService.stop()\r\n      );\r\n  }\r\n\r\n  public pageChanged(ev: any): void {\r\n    this.loadingService.start();\r\n    if (ev > this.pagingInfo.currentPage) {\r\n      if (!this.pagingInfo.nextPageLink) {\r\n        this.pagingInfo.nextPageLink = this.updateQueryStringParameter(this.pagingInfo.basePageLink, 'pageSize', this.pagingInfo.pageSize);\r\n        this.pagingInfo.nextPageLink = this.updateQueryStringParameter(this.pagingInfo.nextPageLink, 'pageNumber', ev);\r\n      }\r\n      if (ev > (this.pagingInfo.currentPage + 1)) {\r\n        // kliknięto link do konkretnej strony -> zatem trzeba poskładać linka ręcznie\r\n        this.pagingInfo.nextPageLink = this.updateQueryStringParameter(this.pagingInfo.nextPageLink, 'pageNumber', ev);\r\n      }\r\n      this.PersonService.GetPersons(this.pagingInfo.nextPageLink)\r\n        .subscribe(persons => {\r\n          this.PersonsTab = persons.results;\r\n          this.pagingInfo = persons.metadata;\r\n        },\r\n          error => {\r\n            this.loadingService.stop();\r\n          },\r\n          () => this.loadingService.stop()\r\n        );\r\n    } else if (ev < this.pagingInfo.currentPage) {\r\n      if (this.pagingInfo.previousPageLink) {\r\n        this.pagingInfo.previousPageLink = this.updateQueryStringParameter(this.pagingInfo.basePageLink, 'pageSize', this.pagingInfo.pageSize);\r\n        this.pagingInfo.previousPageLink = this.updateQueryStringParameter(this.pagingInfo.previousPageLink, 'pageNumber', ev);\r\n      }\r\n      if (ev < (this.pagingInfo.currentPage - 1)) {\r\n        // kliknięto link do konkretnej strony -> zatem trzeba poskładać linka ręcznie\r\n        this.pagingInfo.previousPageLink = this.updateQueryStringParameter(this.pagingInfo.previousPageLink, 'pageNumber', ev);\r\n      }\r\n      this.PersonService.GetPersons(this.pagingInfo.previousPageLink)\r\n        .subscribe(persons => {\r\n          this.PersonsTab = persons.results;\r\n          this.pagingInfo = persons.metadata;\r\n        },\r\n          error => {\r\n            this.loadingService.stop();\r\n          },\r\n          () => this.loadingService.stop()\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/person-list/person-list.component.ts","module.exports = \"<div *ngIf=\\\"SelectedItem\\\">\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <form (ngSubmit)=\\\"OnSubmit()\\\" novalidate [formGroup]=\\\"personForm\\\" class=\\\"form-horizontal\\\">\\r\\n                <fieldset>\\r\\n                    <div *ngIf=\\\"errors\\\">\\r\\n                        <div *ngFor=\\\"let error of errors\\\">\\r\\n                            <span class=\\\"validation-errors\\\">{{error}}\\r\\n                                <br> </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (personForm.get('firstName').touched || \\r\\n                                                  personForm.get('firstName').dirty) &&\\r\\n                                                  !personForm.get('firstName').valid }\\\">\\r\\n                        <label class=\\\"col-md-2 control-label\\\" for=\\\"firstNameId\\\">First Name</label>\\r\\n\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <input class=\\\"form-control\\\" id=\\\"firstNameId\\\" type=\\\"text\\\" placeholder=\\\"First Name (required)\\\" formControlName=\\\"firstName\\\"\\r\\n                            />\\r\\n                            <span class=\\\"help-block\\\" *ngIf=\\\"(personForm.get('firstName').touched || \\r\\n                                                             personForm.get('firstName').dirty) && \\r\\n                                                             personForm.get('firstName').errors\\\">\\r\\n                                <span *ngIf=\\\"personForm.get('firstName').errors.required\\\">\\r\\n                                    Please enter your first name.\\r\\n                                </span>\\r\\n                                <span *ngIf=\\\"personForm.get('firstName').errors.minlength\\\">\\r\\n                                    The first name must be longer than 3 characters.\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (personForm.get('lastName').touched || personForm.get('lastName').dirty) && !personForm.get('lastName').valid }\\\">\\r\\n                        <label class=\\\"col-md-2 control-label\\\" for=\\\"lastNameId\\\">Last Name</label>\\r\\n\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <input class=\\\"form-control\\\" id=\\\"lastNameId\\\" type=\\\"text\\\" placeholder=\\\"Last Name (required)\\\" formControlName=\\\"lastName\\\" />\\r\\n                            <span class=\\\"help-block\\\" *ngIf=\\\"(personForm.get('lastName').touched || personForm.get('lastName').dirty) && personForm.get('lastName').errors\\\">\\r\\n                                <span *ngIf=\\\"personForm.get('lastName').errors.required\\\">\\r\\n                                    Please enter your last name.\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div formGroupName=\\\"emailGroup\\\" [ngClass]=\\\"{'has-error': personForm.get('emailGroup').errors }\\\">\\r\\n                        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': emailMessage}\\\">\\r\\n                            <label class=\\\"col-md-2 control-label\\\" for=\\\"emailId\\\">Email</label>\\r\\n\\r\\n                            <div class=\\\"col-md-8\\\">\\r\\n                                <input class=\\\"form-control\\\" id=\\\"emailId\\\" type=\\\"email\\\" placeholder=\\\"Email (required)\\\" formControlName=\\\"email\\\" />\\r\\n                                <span class=\\\"help-block\\\" *ngIf=\\\"emailMessage\\\">\\r\\n                                    {{ emailMessage }}\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (personForm.get('emailGroup.confirmEmail').touched || \\r\\n                                                  personForm.get('emailGroup.confirmEmail').dirty) && \\r\\n                                                  !personForm.get('emailGroup.confirmEmail').valid }\\\">\\r\\n                            <label class=\\\"col-md-2 control-label\\\" for=\\\"confirmEmailId\\\">Confirm Email</label>\\r\\n\\r\\n                            <div class=\\\"col-md-8\\\">\\r\\n                                <input class=\\\"form-control\\\" id=\\\"confirmEmailId\\\" type=\\\"email\\\" placeholder=\\\"Confirm Email (required)\\\" formControlName=\\\"confirmEmail\\\"\\r\\n                                />\\r\\n                                <span class=\\\"help-block\\\" *ngIf=\\\"(personForm.get('emailGroup.confirmEmail').touched || \\r\\n                                                            personForm.get('emailGroup.confirmEmail').dirty) && \\r\\n                                                            (personForm.get('emailGroup.confirmEmail').errors ||\\r\\n                                                             personForm.get('emailGroup').errors)\\\">\\r\\n                                    <span *ngIf=\\\"personForm.get('emailGroup.confirmEmail').errors?.required\\\">\\r\\n                                        Please confirm your email address.\\r\\n                                    </span>\\r\\n                                    <span *ngIf=\\\"personForm.get('emailGroup').errors?.match\\\">\\r\\n                                        The confirmation does not match the email address.\\r\\n                                    </span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': !personForm.get('mobilePhone').valid }\\\">\\r\\n                        <label class=\\\"col-md-2 control-label\\\" for=\\\"mobilePhoneId\\\">Phone</label>\\r\\n\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <input class=\\\"form-control\\\" id=\\\"mobilePhoneId\\\" type=\\\"tel\\\" placeholder=\\\"Phone\\\" formControlName=\\\"mobilePhone\\\" />\\r\\n                            <span class=\\\"help-block\\\" *ngIf=\\\"personForm.get('mobilePhone').errors\\\">\\r\\n                                <span *ngIf=\\\"personForm.get('mobilePhone').errors.required\\\">\\r\\n                                    Please enter your phone number.\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"col-md-2 control-label\\\">Main contact channel</label>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <label class=\\\"radio-inline\\\">\\r\\n                                <input type=\\\"radio\\\" value=\\\"email\\\" formControlName=\\\"notification\\\">Email\\r\\n                            </label>\\r\\n                            <label class=\\\"radio-inline\\\">\\r\\n                                <input type=\\\"radio\\\" value=\\\"text\\\" formControlName=\\\"notification\\\">Text\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (personForm.get('city').touched || personForm.get('city').dirty) && !personForm.get('city').valid }\\\">\\r\\n                        <label class=\\\"col-md-2 control-label\\\" for=\\\"cityId\\\">City</label>\\r\\n\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <input class=\\\"form-control\\\" id=\\\"cityId\\\" type=\\\"text\\\" placeholder=\\\"City (required)\\\" formControlName=\\\"city\\\" />\\r\\n                            <span class=\\\"help-block\\\" *ngIf=\\\"(personForm.get('city').touched || personForm.get('city').dirty) && personForm.get('city').errors\\\">\\r\\n                                <span *ngIf=\\\"personForm.get('city').errors.required\\\">\\r\\n                                    Please enter city name.\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (personForm.get('postalCode').touched || personForm.get('postalCode').dirty) && !personForm.get('postalCode').valid }\\\">\\r\\n                        <label class=\\\"col-md-2 control-label\\\" for=\\\"postalCodeId\\\">Postal code</label>\\r\\n\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <input class=\\\"form-control\\\" id=\\\"postalCodeId\\\" type=\\\"text\\\" placeholder=\\\"postalCode (required)\\\" formControlName=\\\"postalCode\\\"\\r\\n                            />\\r\\n                            <span class=\\\"help-block\\\" *ngIf=\\\"(personForm.get('postalCode').touched || personForm.get('postalCode').dirty) && personForm.get('postalCode').errors\\\">\\r\\n                                <span *ngIf=\\\"personForm.get('postalCode').errors.required\\\">\\r\\n                                    Please enter postal code name.\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (personForm.get('street').touched || personForm.get('street').dirty) && !personForm.get('street').valid }\\\">\\r\\n                        <label class=\\\"col-md-2 control-label\\\" for=\\\"streetId\\\">Street</label>\\r\\n\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <input class=\\\"form-control\\\" id=\\\"streetId\\\" type=\\\"text\\\" placeholder=\\\"street (required)\\\" formControlName=\\\"street\\\" />\\r\\n                            <span class=\\\"help-block\\\" *ngIf=\\\"(personForm.get('street').touched || personForm.get('street').dirty) && personForm.get('street').errors\\\">\\r\\n                                <span *ngIf=\\\"personForm.get('street').errors.required\\\">\\r\\n                                    Please enter street name.\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (personForm.get('homeNumber').touched || personForm.get('homeNumber').dirty) && !personForm.get('homeNumber').valid }\\\">\\r\\n                        <label class=\\\"col-md-2 control-label\\\" for=\\\"homeNumberId\\\">Home number</label>\\r\\n\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <input class=\\\"form-control\\\" id=\\\"homeNumberId\\\" type=\\\"text\\\" placeholder=\\\"homeNumber (required)\\\" formControlName=\\\"homeNumber\\\"\\r\\n                            />\\r\\n                            <span class=\\\"help-block\\\" *ngIf=\\\"(personForm.get('homeNumber').touched || personForm.get('homeNumber').dirty) && personForm.get('homeNumber').errors\\\">\\r\\n                                <span *ngIf=\\\"personForm.get('homeNumber').errors.required\\\">\\r\\n                                    Please enter home number name.\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <br>\\r\\n\\r\\n                    <div class=\\\"pull-right\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"GoBack()\\\">\\r\\n                            <i class=\\\"fa fa-arrow-left\\\"></i>Cancel\\r\\n                        </button>\\r\\n\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!personForm.valid\\\">\\r\\n                            <i class=\\\"fa fa-floppy-o fa-lg\\\"></i>Save\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </fieldset>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/person/shared/person-template.html\n// module id = ../../../../../src/app/person/shared/person-template.html\n// module chunks = main","export * from './postal-code.pipe';\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/pipes/pipes-index.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'postalCode'\r\n})\r\nexport class  PostalCodePipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    if (value) {\r\n      if (value.length === 5) {\r\n        return value.slice(0, 2) + '-' + value.slice(2);\r\n      } else { return value; }\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/pipes/postal-code.pipe.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions, URLSearchParams } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { Configuration } from '../configuration';\r\nimport { ConfigurationModel } from '../app-shared';\r\n\r\n@Injectable()\r\nexport class ConfigurationService {\r\n\r\n  public headers: Headers;\r\n  // public currentMerchant: Merchant;\r\n\r\n  constructor(public http: Http,\r\n    // public securityService: OidcSecurityService,\r\n    public _configuration: Configuration) { }\r\n\r\n\r\n  public GetConfiguration(): Observable<ConfigurationModel> {\r\n    this.setHeaders();\r\n\r\n    return this.http.get(this._configuration.Configuration, { headers: this.headers })\r\n      .map((response: Response) => <ConfigurationModel>response.json())\r\n      .catch(this.handleError);\r\n  }\r\n  \r\n\r\n  public setHeaders(): void {\r\n    this.headers = new Headers();\r\n    this.headers.append('Access-Control-Allow-Origin', '*');\r\n    this.headers.append('Content-Type', 'application/json');\r\n    this.headers.append('Accept', 'application/json');\r\n\r\n    // const token = this.securityService.GetToken();\r\n    // if (token !== '' && token !== undefined) {\r\n    //   const tokenValue = 'Bearer ' + token;\r\n    //   this.headers.append('Authorization', tokenValue);\r\n    // }\r\n  }\r\n\r\n  public handleError(error: Response | any): Observable<any> {\r\n\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      // const err = body.error || JSON.stringify(body);\r\n      // const err = JSON.stringify(body);\r\n      // errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n      errMsg = body;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n\r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/services/configuration.service.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class FilterService {\r\n  private filtersList: KeyValuePair<string, object>[] = [];\r\n  constructor() { }\r\n\r\n  public StoreFilters(key: string, value: object): boolean {\r\n    return this.filtersList.push({ key, value }) >= 0;\r\n  }\r\n\r\n  public GetFilters(key): object {\r\n    return this.filtersList.filter(x => x.key === key).length > 0 ? this.filtersList.filter(x => x.key === key)[0].value : null;\r\n  }\r\n\r\n}\r\n\r\ninterface KeyValuePair<K, V> {\r\n  key: K;\r\n  value: V;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/services/filter.service.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LoadingService {\r\n  public loading = false;\r\n  private counter: number = 0;\r\n\r\n  public start(): void {\r\n    this.loading = true;\r\n    this.counter++;\r\n  }\r\n\r\n  public stop(): void {\r\n\r\n    this.counter--;\r\n    if (this.counter <= 0) {\r\n      this.loading = false;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/services/loading.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions, URLSearchParams } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { Configuration } from '../configuration';\r\nimport { PagedPerson, Person } from '../app-shared';\r\n\r\n@Injectable()\r\nexport class PersonService {\r\n  public headers: Headers;\r\n\r\n  constructor(public http: Http,\r\n    public _configuration: Configuration) { }\r\n\r\n\r\n  public GetWithParam(param?: any): Observable<PagedPerson> {\r\n    this.setHeaders();\r\n    const params = new URLSearchParams();\r\n    if (param) {\r\n      if (param.lastName !== '') {\r\n        params.set('lastName', param.lastName);\r\n      }\r\n      if (param.city !== '') {\r\n        params.set('city', param.city);\r\n      }\r\n\r\n    }\r\n    return this.http.get(this._configuration.Person, { search: params, headers: this.headers })\r\n      .map((response: Response) => <PagedPerson>response.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  // for paging\r\n  public GetPersons(url?: string): Observable<PagedPerson> {\r\n    this.setHeaders();\r\n    let pageUrl: string = this._configuration.Person;\r\n    if (url) {\r\n      pageUrl = url;\r\n    }\r\n    return this.http.get(url, { headers: this.headers })\r\n      .map((response: Response) => <PagedPerson>response.json())\r\n      .catch(this.handleError);\r\n  }\r\n  ///\r\n\r\n  public GetById(id: number): Observable<Person> {\r\n    this.setHeaders();\r\n    let url = `${this._configuration.Person}/${id}`\r\n    return this.http.get(url, { headers: this.headers })\r\n      .map((response: Response) => <Person>response.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public AddPerson(person: Person): Observable<Person> {\r\n    this.setHeaders();\r\n    return this.http.post(this._configuration.Person, JSON.stringify(person), { headers: this.headers })\r\n      .map((response: Response) => <Person>response.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n\r\n  public UpdatePerson(person: Person, id: number): Observable<Person> {\r\n    this.setHeaders();\r\n    let url = `${this._configuration.Person}/${id}`\r\n    return this.http.put(url, JSON.stringify(person), { headers: this.headers })\r\n      .map(res => { return res.json(); })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public setHeaders(): void {\r\n    this.headers = new Headers();\r\n    this.headers.append('Access-Control-Allow-Origin', '*');\r\n    this.headers.append('Content-Type', 'application/json');\r\n    this.headers.append('Accept', 'application/json');\r\n  }\r\n\r\n  public handleError(error: Response | any): Observable<any> {\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      errMsg = body;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n\r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/services/person.service.ts","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class Resources {\r\n    public Woman: string = \"\";\r\n    public Man: string = \"\";\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/services/resources.ts","export * from './resources';\r\nexport * from './person.service';\r\nexport * from './filter.service';\r\nexport * from './loading.service';\r\nexport * from './configuration.service';\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/app/services/services-index.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Greg/Documents/dev/GitHub/PeopleManagement/Angular/src/main.ts"],"sourceRoot":"webpack:///"}